#!/usr/bin/env ruby
# appium ruby console = arc
require 'rubygems'

def print_version
  require 'appium_console/version'
  require 'appium_lib/common/version'
  puts "web_console: v#{::Appium::Console::VERSION}"
  puts "    appium_lib: v#{::Appium::VERSION}"
end

ARGV.each_index do |idx|
  a = ARGV[idx]
  b = ARGV[idx + 1]
  if a.match /-?-?v/i
    print_version
    exit
  elsif a.match /upgrade/i
    cmd = [ 'gem uninstall -aIx appium_lib',
      'gem uninstall -aIx web_console',
      'gem install --no-rdoc --no-ri web_console'
     ].join '; '
    puts cmd
    begin; `#{cmd}`; rescue; end
    puts 'Upgrade complete.'
    # exit after upgrading
    exit
  elsif a.match /setup/i
    toml = File.join Dir.pwd, 'appium.txt'
    if !b
      puts 'setup called without android or ios. exiting.'
      exit
    end
    File.open toml, 'w' do |f|
      if b && b.match(/android/i)
        f.puts %Q(APP_PATH="#{ENV['APP_PATH'] || '/path/to/my.apk'}")
        f.puts %Q(APP_PACKAGE="#{ENV['APP_PACKAGE'] || 'com.my.Pkg'}")
        f.puts %Q(APP_ACTIVITY="#{ENV['APP_ACTIVITY'] || 'StartActivity'}")
        f.puts %Q(APP_WAIT_ACTIVITY="#{ENV['APP_WAIT_ACTIVITY'] || 'SplashActivity'}")
      elsif b && b.match(/ios/i)
        # iOS requires only APP_PATH
        ios = ENV['APP_PATH']
        ios = false if File.extname(ios).downcase == '.apk'
        f.puts %Q(APP_PATH="#{ios || '/path/to/myiOS.app'}")
      end
    end
    exit
  end
end

require_relative '../lib/web_console'